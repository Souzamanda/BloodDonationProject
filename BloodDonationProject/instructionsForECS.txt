                           # aws cli:
pip install awscli

# esc-cli install:
# http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_CLI_installation.html

# Config cluster:
ecs-cli configure --cluster pets --region us-east-1

# Defining cluster:
ecs-cli up --keypair keypair4comp306 --capability-iam --size 3 --instance-type t2.micro --security-group sg-03e5607b92112db53 --subnets subnet-0c436c287484af453,subnet-0fd0be7fd1b8c21da,subnet-0dc6e829b5d0af899 --vpc vpc-0146c0d97dee5dbb9

# Create repository on aws:
aws ecr create-repository --repository-name asp-repo --region us-east-1

# Login to aws:
aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 093797997223.dkr.ecr.us-east-1.amazonaws.com

# Build the container:
docker build -t asp-repo .

# taging the image:
docker tag asp-repo:latest 093797997223.dkr.ecr.us-east-1.amazonaws.com/asp-repo:latest
docker push 093797997223.dkr.ecr.us-east-1.amazonaws.com/asp-repo:latest

# Optional see repositories:
aws ecr describe-repositories --region us-east-1


# run the machine:

ecs-cli compose --project-name cat --file ecs.docker-compose.yml service create
ecs-cli compose --project-name cat --file ecs.docker-compose.yml up
ecs-cli compose --project-name cat --file ecs.docker-compose.yml service scale 3


ecs-cli compose --project-name mouse --file ecs.docker-compose.yml service create
ecs-cli compose --project-name mouse --file ecs.docker-compose.yml up 
ecs-cli compose --project-name mouse --file ecs.docker-compose.yml service scale 3